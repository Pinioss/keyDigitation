/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package keyCompetition;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.io.*;
import java.net.*;
import java.nio.file.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.concurrent.atomic.AtomicLong;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Pini
 */
public class keyFrame extends javax.swing.JFrame {
    
    private AtomicLong startTime;
    private String nomeGiocatore;
    private List<String> paroleDaScrivere;
    private int numeroErroriCorrenti;
    private int indiceParolaCorrente;
     /**
     * Creates new form keyFrame
     */
    public keyFrame() {
        initComponents();
        configureRankingKeyListener();
        initCustomLogic();
        
        // Rimuovi dimensioni prefissate e usa layout manager appropriato
        setSize(296,408);
        setLocationRelativeTo(null); // Centra il frame sullo schermo
        setResizable(false); // Evita ridimensionamenti indesiderati
        
        UsernamePage.setVisible(true);
        WordsOption.setVisible(false);
        KeyDigitation.setVisible(false);
        Ranking.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        UsernamePage = new javax.swing.JPanel();
        UserText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        sfondo1 = new javax.swing.JLabel();
        WordsOption = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        Button10 = new javax.swing.JButton();
        Button20 = new javax.swing.JButton();
        Button30 = new javax.swing.JButton();
        sfondo2 = new javax.swing.JLabel();
        KeyDigitation = new javax.swing.JPanel();
        digitationText = new javax.swing.JTextArea();
        errorsText = new javax.swing.JTextField();
        currentText = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        userText = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        sfondo3 = new javax.swing.JLabel();
        Ranking = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        rankTable = new javax.swing.JTable();
        sfondo4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        UsernamePage.setBackground(new java.awt.Color(51, 51, 51));
        UsernamePage.setPreferredSize(new java.awt.Dimension(281, 370));
        UsernamePage.setLayout(null);

        UserText.setBackground(new java.awt.Color(217, 217, 217));
        UserText.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        UserText.setOpaque(false);
        UserText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserTextActionPerformed(evt);
            }
        });
        UsernamePage.add(UserText);
        UserText.setBounds(56, 198, 170, 42);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/keyCompetition/text1.png"))); // NOI18N
        UsernamePage.add(jLabel2);
        jLabel2.setBounds(51, 41, 179, 51);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/keyCompetition/textField1.png"))); // NOI18N
        UsernamePage.add(jLabel1);
        jLabel1.setBounds(51, 157, 179, 90);

        sfondo1.setBackground(new java.awt.Color(0, 0, 0));
        sfondo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/keyCompetition/Username.png"))); // NOI18N
        UsernamePage.add(sfondo1);
        sfondo1.setBounds(0, 0, 282, 370);

        WordsOption.setBackground(new java.awt.Color(51, 51, 51));
        WordsOption.setPreferredSize(new java.awt.Dimension(282, 370));
        WordsOption.setLayout(null);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/keyCompetition/text2.png"))); // NOI18N
        WordsOption.add(jLabel4);
        jLabel4.setBounds(51, 41, 179, 51);

        Button10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/keyCompetition/10.png"))); // NOI18N
        Button10.setContentAreaFilled(false);
        Button10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button10ActionPerformed(evt);
            }
        });
        WordsOption.add(Button10);
        Button10.setBounds(100, 142, 81, 37);

        Button20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/keyCompetition/20.png"))); // NOI18N
        Button20.setContentAreaFilled(false);
        Button20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button20ActionPerformed(evt);
            }
        });
        WordsOption.add(Button20);
        Button20.setBounds(100, 205, 81, 37);

        Button30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/keyCompetition/30.png"))); // NOI18N
        Button30.setContentAreaFilled(false);
        Button30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button30ActionPerformed(evt);
            }
        });
        WordsOption.add(Button30);
        Button30.setBounds(100, 268, 81, 37);

        sfondo2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/keyCompetition/Username.png"))); // NOI18N
        WordsOption.add(sfondo2);
        sfondo2.setBounds(0, 0, 282, 370);

        KeyDigitation.setBackground(new java.awt.Color(51, 51, 51));
        KeyDigitation.setPreferredSize(new java.awt.Dimension(729, 469));
        KeyDigitation.setLayout(null);

        digitationText.setEditable(false);
        digitationText.setBackground(new java.awt.Color(217, 217, 217));
        digitationText.setColumns(20);
        digitationText.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        digitationText.setLineWrap(true);
        digitationText.setRows(5);
        digitationText.setWrapStyleWord(true);
        KeyDigitation.add(digitationText);
        digitationText.setBounds(37, 42, 654, 213);

        errorsText.setEditable(false);
        errorsText.setBackground(new java.awt.Color(217, 217, 217));
        errorsText.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        errorsText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                errorsTextActionPerformed(evt);
            }
        });
        KeyDigitation.add(errorsText);
        errorsText.setBounds(555, 290, 52, 31);

        currentText.setEditable(false);
        currentText.setBackground(new java.awt.Color(217, 217, 217));
        currentText.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        KeyDigitation.add(currentText);
        currentText.setBounds(210, 293, 100, 31);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/keyCompetition/currentWord.png"))); // NOI18N
        KeyDigitation.add(jLabel5);
        jLabel5.setBounds(37, 276, 290, 62);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/keyCompetition/digitation.png"))); // NOI18N
        KeyDigitation.add(jLabel3);
        jLabel3.setBounds(37, 42, 654, 213);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/keyCompetition/errors.png"))); // NOI18N
        KeyDigitation.add(jLabel6);
        jLabel6.setBounds(462, 274, 229, 62);

        userText.setBackground(new java.awt.Color(217, 217, 217));
        userText.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        userText.setOpaque(false);
        userText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userTextActionPerformed(evt);
            }
        });
        KeyDigitation.add(userText);
        userText.setBounds(37, 354, 654, 58);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/keyCompetition/text3.png"))); // NOI18N
        jLabel7.setText("jLabel7");
        KeyDigitation.add(jLabel7);
        jLabel7.setBounds(37, 354, 654, 58);

        sfondo3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/keyCompetition/keyDigitation.png"))); // NOI18N
        KeyDigitation.add(sfondo3);
        sfondo3.setBounds(0, 0, 729, 469);

        Ranking.setBackground(new java.awt.Color(51, 51, 51));
        Ranking.setPreferredSize(new java.awt.Dimension(421, 370));
        Ranking.setLayout(null);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/keyCompetition/text4.png"))); // NOI18N
        Ranking.add(jLabel8);
        jLabel8.setBounds(36, 41, 179, 50);

        jScrollPane1.setBackground(new java.awt.Color(217, 217, 217));

        rankTable.setBackground(new java.awt.Color(217, 217, 217));
        rankTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        rankTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Nome", "Tempo", "Velocità", "Precisione"
            }
        ));
        jScrollPane1.setViewportView(rankTable);

        Ranking.add(jScrollPane1);
        jScrollPane1.setBounds(36, 128, 349, 197);

        sfondo4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/keyCompetition/Ranking.png"))); // NOI18N
        Ranking.add(sfondo4);
        sfondo4.setBounds(0, 0, 421, 370);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(UsernamePage, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(WordsOption, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(KeyDigitation, javax.swing.GroupLayout.PREFERRED_SIZE, 729, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(Ranking, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(UsernamePage, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(WordsOption, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(KeyDigitation, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(Ranking, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void configureRankingKeyListener() {
    Ranking.addKeyListener(new KeyAdapter() {
        @Override
        public void keyPressed(KeyEvent e) {
            if (e.getKeyCode() == KeyEvent.VK_ENTER) { // Controlla se è stato premuto "Invio"
                chiudiApplicazione(); // Chiama la funzione per chiudere l'applicazione
            }
        }
    });

    // Assicurati che la scheda `Ranking` possa ricevere il focus
    Ranking.setFocusable(true);
    }
    
    private void initCustomLogic() {

        // Azione per il campo di inserimento nome (prima scheda)
        UserText.addActionListener(e -> {
            nomeGiocatore = UserText.getText().trim();
            if (nomeGiocatore.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Inserisci un nome valido!", "Errore", JOptionPane.ERROR_MESSAGE);
            } else {
                setSize(296,408);
                UsernamePage.setVisible(false);
                WordsOption.setVisible(true); 
            }
        });

        // Azione per i pulsanti delle parole (seconda scheda)
        Button10.addActionListener(e -> mostraSchedaDigitazione(10));
        Button20.addActionListener(e -> mostraSchedaDigitazione(20));
        Button30.addActionListener(e -> mostraSchedaDigitazione(30));

        // Aggiungi un listener al campo di testo per la digitazione
        userText.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent e) {
        if (e.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
            return; // Ignora "Backspace"
        }

        if (startTime.get() == 0) {
            startTime.set(System.currentTimeMillis());
        }

        String testoInserito = userText.getText().trim();
        String parolaCorrente = paroleDaScrivere.get(indiceParolaCorrente);

        if (testoInserito.equals(parolaCorrente)) {
            indiceParolaCorrente++;
            userText.setText("");
            if (indiceParolaCorrente < paroleDaScrivere.size()) {
                currentText.setText(paroleDaScrivere.get(indiceParolaCorrente));
            } else {
                userText.setEditable(false);
                mostraClassifica();
            }
        } else if (!parolaCorrente.startsWith(testoInserito)) {
            numeroErroriCorrenti++;
            errorsText.setText(String.valueOf(numeroErroriCorrenti));
        }
        }
        });
    }

    private void mostraSchedaDigitazione(int numeroParole) {
    paroleDaScrivere = caricaParoleDaFile("parole.txt");
    if (paroleDaScrivere.size() > numeroParole) {
        Collections.shuffle(paroleDaScrivere);
        paroleDaScrivere = paroleDaScrivere.subList(0, numeroParole);
    }
    digitationText.setText(String.join(" ", paroleDaScrivere));
    currentText.setText(paroleDaScrivere.get(0));
    startTime = new AtomicLong();
    numeroErroriCorrenti = 0;
    indiceParolaCorrente = 0;

    setSize(746,510);
    WordsOption.setVisible(false);
    KeyDigitation.setVisible(true);
}

    private void mostraClassifica() {
    try {
        String host = "localhost";
        int porta = 1235;
        Socket socket = new Socket(host, porta);
        DataOutputStream out = new DataOutputStream(socket.getOutputStream());
        DataInputStream in = new DataInputStream(socket.getInputStream());

        out.writeUTF(nomeGiocatore);
        out.writeLong(System.currentTimeMillis() - startTime.get());
        out.writeInt(numeroErroriCorrenti);
        out.writeInt(paroleDaScrivere.size()); // Invia il numero di parole
        out.flush();

        DefaultTableModel model = (DefaultTableModel) rankTable.getModel();
        model.setRowCount(0); // Pulisce la tabella prima di aggiungere i nuovi dati

        int size = in.readInt();
        for (int i = 0; i < size; i++) {
            String nome = in.readUTF();
            long tempo = in.readLong();
            double velocita = in.readDouble();
            double precisione = in.readDouble();
            model.addRow(new Object[] {
                nome,
                String.format("%.2f", (double) tempo / 1000) + " s",
                String.format("%.2f", velocita) + " cps",
                String.format("%.2f", precisione) + " %"
            });
        }

        in.close();
        out.close();
        socket.close();
    } catch (IOException ex) {
        JOptionPane.showMessageDialog(this, "Errore di connessione al server", "Errore", JOptionPane.ERROR_MESSAGE);
        ex.printStackTrace();
    }

    setSize(438,410);
    KeyDigitation.setVisible(false);
    Ranking.setVisible(true);
}

    
    private List<String> caricaParoleDaFile(String nomeFile) {
        List<String> parole = new ArrayList<>();
        try {
            List<String> lines = Files.readAllLines(Paths.get("C:\\Users\\PPiC\\Desktop\\inf\\scrittura\\scrittura\\src\\keyCompetition\\parole.txt"));
            for (String line : lines) {
                if (!line.trim().isEmpty()) {
                    parole.add(line.trim());
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        return parole;
    }
    
    private void chiudiApplicazione() {
        System.exit(0);
    }
    
    private void UserTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserTextActionPerformed
     
    }//GEN-LAST:event_UserTextActionPerformed

    private void Button10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button10ActionPerformed
       
    }//GEN-LAST:event_Button10ActionPerformed

    private void Button20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button20ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Button20ActionPerformed

    private void Button30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button30ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Button30ActionPerformed

    private void errorsTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_errorsTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_errorsTextActionPerformed

    private void userTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userTextActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            keyFrame frame = new keyFrame();
            frame.setVisible(true);
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Button10;
    private javax.swing.JButton Button20;
    private javax.swing.JButton Button30;
    private javax.swing.JPanel KeyDigitation;
    private javax.swing.JPanel Ranking;
    private javax.swing.JTextField UserText;
    private javax.swing.JPanel UsernamePage;
    private javax.swing.JPanel WordsOption;
    private javax.swing.JTextField currentText;
    private javax.swing.JTextArea digitationText;
    private javax.swing.JTextField errorsText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable rankTable;
    private javax.swing.JLabel sfondo1;
    private javax.swing.JLabel sfondo2;
    private javax.swing.JLabel sfondo3;
    private javax.swing.JLabel sfondo4;
    private javax.swing.JTextField userText;
    // End of variables declaration//GEN-END:variables
}